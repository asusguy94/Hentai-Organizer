/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VideoVideoIdImport } from './routes/video/$videoId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const VideoIndexLazyImport = createFileRoute('/video/')()
const EditorIndexLazyImport = createFileRoute('/editor/')()
const StarStarIdLazyImport = createFileRoute('/star/$starId')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const VideoIndexLazyRoute = VideoIndexLazyImport.update({
  path: '/video/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/video/index.lazy').then((d) => d.Route))

const EditorIndexLazyRoute = EditorIndexLazyImport.update({
  path: '/editor/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/editor/index.lazy').then((d) => d.Route))

const StarStarIdLazyRoute = StarStarIdLazyImport.update({
  path: '/star/$starId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/star/$starId.lazy').then((d) => d.Route))

const VideoVideoIdRoute = VideoVideoIdImport.update({
  path: '/video/$videoId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/video/$videoId': {
      preLoaderRoute: typeof VideoVideoIdImport
      parentRoute: typeof rootRoute
    }
    '/star/$starId': {
      preLoaderRoute: typeof StarStarIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/editor/': {
      preLoaderRoute: typeof EditorIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/video/': {
      preLoaderRoute: typeof VideoIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  VideoVideoIdRoute,
  StarStarIdLazyRoute,
  EditorIndexLazyRoute,
  VideoIndexLazyRoute,
])

/* prettier-ignore-end */
